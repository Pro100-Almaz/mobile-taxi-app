# Driver Generator Service Dockerfile
FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Create necessary directories
RUN mkdir -p /app/data /app/cache

# Copy application code
COPY . .

# Create startup script
RUN echo '#!/bin/bash\n\
cd /app\n\
python -c "\n\
import asyncio\n\
from app.services.driver_generator import DriverGeneratorService\n\
\n\
async def main():\n\
    print('\''🚗 Starting Driver Generator Service...\'')\n\
    service = DriverGeneratorService()\n\
    await service.initialize_drivers()\n\
\n\
    stats = service.get_stats()\n\
    print(f'\''✅ Generated {stats[\"total_drivers\"]} drivers\'\'')\n\
    print(f'\''📍 Location data loaded: {stats[\"location_data_loaded\"]}\'\'')\n\
\n\
    # Keep the service running\n\
    while True:\n\
        await asyncio.sleep(60)\n\
        stats = service.get_stats()\n\
        print(f'\''📊 Drivers: {stats[\"online_drivers\"]}/{stats[\"total_drivers\"]} online\'\'')\n\
\n\
if __name__ == '\''__main__'\'':\n\
    asyncio.run(main())\n\
"' > /app/start_driver_generator.sh && chmod +x /app/start_driver_generator.sh

# Create non-root user
RUN useradd --create-home --shell /bin/bash app \
    && chown -R app:app /app
USER app

# Expose port
EXPOSE 8001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import sys; print('OK'); sys.exit(0)"

# Start the driver generator service
CMD ["/app/start_driver_generator.sh"]
